{"version":3,"sources":["init.js","ui_carousel.js","ui_carousel_take2.js","ui_scrollDetector.js","ui_tablist.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjvfile":"client.js","sourcesContent":["/**\r\n * CL 전역객체 선언\r\n * @type object\r\n * @public\r\n * @return {object}\r\n */\r\nvar CL = window.CL || {};\r\n\r\n/* eslint-disable */\r\n// IE8 POLYFILLS\r\nif (typeof Array.prototype.forEach !== 'function') {\r\n  Array.prototype.forEach = function(callback, context) {\r\n    for (var i = 0; i < this.length; i++) {\r\n      callback.apply(context, [this[i], i, this]);\r\n    }\r\n  };\r\n}\r\n/* eslint-enable */\r\n\r\n(function () {\r\n  'use strict';\r\n  // simple pubsub pattern\r\n  CL.events = {\r\n    events: {},\r\n    on: function (eventName, fn) {\r\n      this.events[eventName] = this.events[eventName] || [];\r\n      this.events[eventName].push(fn);\r\n    },\r\n    off: function (eventName, fn) {\r\n      var i;\r\n\r\n      if (this.events[eventName]) {\r\n        for (i = 0; i < this.events[eventName].length; i++) {\r\n          if (this.events[eventName][i] === fn) {\r\n            this.events[eventName].splice(i, 1);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    emit: function (eventName, data) {\r\n      if (this.events[eventName]) {\r\n        this.events[eventName].forEach(function (fn) {\r\n          fn(data);\r\n        });\r\n      }\r\n    }\r\n  };\r\n}());\n","(function ($) {\n  var $container = $('[data-uipack=\"ui_carousel\"]');\n  var carouselID = $container.find('.carousel').attr('id');\n  var $controllers = $container.find('[aria-controls=\"' + carouselID + '\"]');\n  var $liveItem = $container.find('.frame[aria-hidden=\"false\"]');\n  var maxIdx = $container.find('.frame').size() - 1;\n  var liveIdx = $liveItem.index();\n  var autoInterval;\n  var initTimeout;\n  var autoTimer = 1000;\n\n  // modify here for transition effects\n  function switchView(idx) {\n    $container.find('#' + carouselID).find('.frame').attr('aria-hidden', true);\n    $container.find('#' + carouselID).find('.frame').eq(idx).attr('aria-hidden', false);\n  }\n\n  function counter(type) {\n    if (type === 'increment') {\n      if (liveIdx < maxIdx) {\n        liveIdx += 1;\n      } else {\n        liveIdx = 0;\n      }\n    } else if (type === 'decrement') {\n      if (liveIdx <= 0) {\n        liveIdx = maxIdx;\n      } else {\n        liveIdx -= 1;\n      }\n    }\n  }\n\n  function controller(action) {\n    clearInterval(autoInterval);\n    clearTimeout(initTimeout);\n\n    switch (action) {\n      case 'next':\n        counter('increment');\n        break;\n\n      case 'prev':\n        counter('decrement');\n        break;\n\n      case 'pause':\n        clearInterval(autoInterval);\n        break;\n\n      // by default auto roll\n      default:\n      case 'play':\n        initTimeout = setTimeout(function () {\n          autoInterval = setInterval(function () {\n            counter('increment');\n            switchView(liveIdx);\n          }, autoTimer);\n        }, autoTimer);\n        break;\n    }\n\n    // switch view\n    switchView(liveIdx);\n  }\n\n  function eventHandler(e) {\n    var eventValue = e.target.getAttribute('value');\n\n    switch (e.type) {\n      case 'mouseenter':\n        controller('pause');\n        break;\n\n      case 'mouseleave':\n        controller('play');\n        break;\n\n      default:\n        controller(eventValue);\n        break;\n    }\n  }\n\n  // if ($container.length) {\n  //   // bind event\n  //   $controllers.find('button').on('click', eventHandler);\n  //   $container.find('.innerFrame').on('mouseenter mouseleave', eventHandler);\n\n  //   // fire auto roll\n  //   controller();\n  // }\n}(jQuery));\n","(function ($, doc) {\r\n  var $container = $('[data-uipack=\"ui_carousel\"]');\r\n  var selector = doc.querySelectorAll('.carousel');\r\n  var carousels = [];\r\n\r\n  // constructor\r\n  function Carousel(element) {\r\n    this.id = element.getAttribute('id');\r\n    this.element = element;\r\n    this.liveIdx = $(element).find('.frame[aria-hidden=\"false\"]').index();\r\n    this.maxIdx = $(element).find('.frame').size() - 1;\r\n    this.interval = 3000;\r\n    this.auto = undefined;\r\n  }\r\n\r\n  Carousel.prototype = {\r\n    // TODO: add method to modify this\r\n    render: function () {\r\n      $(this.element).find('.frame').attr('aria-hidden', true);\r\n      $(this.element).find('.frame').eq(this.liveIdx).attr('aria-hidden', false);\r\n    },\r\n\r\n    update: function (type) {\r\n      if (type === 'increment') {\r\n        if (this.liveIdx < this.maxIdx) {\r\n          this.liveIdx += 1;\r\n        } else {\r\n          this.liveIdx = 0;\r\n        }\r\n      } else if (type === 'decrement') {\r\n        if (this.liveIdx <= 0) {\r\n          this.liveIdx = this.maxIdx;\r\n        } else {\r\n          this.liveIdx -= 1;\r\n        }\r\n      }\r\n\r\n      this.render();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * action types\r\n   *\r\n   * @param {Object} carousel\r\n   * @param {String} actionName\r\n   */\r\n  function actions(carousel, actionName) {\r\n    var param = carousel;\r\n\r\n    // clearInterval on fire\r\n    clearInterval(param.auto);\r\n    switch (actionName) {\r\n      case 'prev':\r\n        param.update('decrement');\r\n        break;\r\n\r\n      case 'next':\r\n        param.update('increment');\r\n        break;\r\n\r\n      case 'pause':\r\n        clearInterval(param.auto);\r\n        break;\r\n\r\n      case 'play':\r\n      default:\r\n        param.auto = setInterval(function () {\r\n          param.update('increment');\r\n        }, param.interval);\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Event handler\r\n   *\r\n   * @param {Object} event\r\n   */\r\n  function eventHandler(event) {\r\n    var carouselObj = event.data.carousel;\r\n    var actionName = event.target.value;\r\n\r\n    if (event.type === 'mouseenter') {\r\n      actions(carouselObj, 'pause');\r\n    } else if (event.type === 'mouseleave') {\r\n      actions(carouselObj, 'play');\r\n    } else {\r\n      actions(carouselObj, actionName);\r\n    }\r\n  }\r\n\r\n  // init\r\n  function init() {\r\n    var i;\r\n    for (i = 0; i < $container.length; i++) {\r\n      // create Carousel obj\r\n      carousels[i] = new Carousel(selector[i]);\r\n\r\n      // bind event\r\n      $container.find('[aria-controls=\"' + carousels[i].id + '\"]').find('button').on('click', {\r\n        carousel: carousels[i],\r\n      }, eventHandler);\r\n\r\n      // add event on carousels area\r\n      $container.find('#' + carousels[i].id).on('mouseenter mouseleave', {\r\n        carousel: carousels[i]\r\n      }, eventHandler);\r\n\r\n      // auto roll on init\r\n      actions(carousels[i], 'play');\r\n    }\r\n  }\r\n\r\n  // run\r\n  if ($container.length) {\r\n    init();\r\n  }\r\n}(jQuery, document));\r\n","(function ($, doc, win) {\r\n  var $window = $(win);\r\n  var selector = doc.querySelectorAll('[data-trigger=\"scroll\"]');\r\n  var elements = [];\r\n  var options = {\r\n    debug: false,\r\n    topPadding: 0,\r\n    botPadding: 0,\r\n  };\r\n  var SCROLL_TOP;\r\n\r\n    // contstructor\r\n  function Detector(element) {\r\n    this.element = element;\r\n    this.elementTop = this.element.getBoundingClientRect().top + $window.scrollTop();\r\n    this.elementBottom = this.elementTop + $(this.element).outerHeight() - options.botPadding;\r\n    this.triggerPosition = this.getTriggerPosition();\r\n    this.isActive = false;\r\n  }\r\n\r\n    // common method\r\n  Detector.prototype = {\r\n    getTriggerPosition: function () {\r\n      var center = $(win).height() / 2 + options.topPadding;\r\n      var elementH = $(this.element).height() / 2;\r\n\r\n      return this.elementTop - (center - elementH);\r\n    },\r\n\r\n    update: function () {\r\n      var currentState = this.isActive;\r\n            // update isActive\r\n      if (SCROLL_TOP >= this.triggerPosition && SCROLL_TOP <= this.elementBottom) {\r\n        this.isActive = true;\r\n      } else {\r\n        this.isActive = false;\r\n      }\r\n\r\n            // NOTE: event publisher\r\n      if (this.isActive != currentState) {\r\n        CL.events.emit('SCROLL_TRIGGER', {\r\n          el: this.element,\r\n          active: this.isActive,\r\n        });\r\n      }\r\n\r\n            // update DOM attr\r\n      this.element.setAttribute('data-live', this.isActive);\r\n    },\r\n  };\r\n\r\n    // window event listener\r\n  function eventHandler(e) {\r\n        // update scrollTOP\r\n    SCROLL_TOP = $window.scrollTop();\r\n\r\n        // update scrolltop\r\n    switch (e.type) {\r\n      default: // on load\r\n      case 'scroll':\r\n                // update Detector\r\n        for (var i = 0; i < elements.length; i++) {\r\n          elements[i].update();\r\n        }\r\n        break;\r\n\r\n      case 'resize':\r\n        for (var i = 0; i < elements.length; i++) {\r\n          elements[i].triggerPosition = elements[i].getTriggerPosition();\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n    // init function\r\n  function init() {\r\n        // create an array of element objects\r\n    for (var i = 0; i < selector.length; i++) {\r\n      elements.push(new Detector(selector[i]));\r\n            // set DOM attr\r\n      elements[i].element.setAttribute('data-live', elements[i].isActive);\r\n    }\r\n\r\n        // bind event\r\n    $window.on('load scroll resize', eventHandler);\r\n\r\n        // debugging\r\n    if (options.debug) console.log(elements);\r\n  }\r\n\r\n    // init\r\n  if (selector.length) init();\r\n}(jQuery, document, window));\r\n","(function ($) {\n  function eventHandler(e) {\n    var $eTarget = $(e.currentTarget);\n    var $targetPanel = $('[aria-labelledby=\"' + $eTarget.attr('id') + '\"]');\n\n    // 조건문으로 이벤트 구분\n    if (e.type === 'click') { // 클릭시 동작\n      $eTarget\n        .attr('aria-selected', true)\n        .addClass('active')\n        .siblings('[role=\"tab\"]')\n        .attr('aria-selected', false)\n        .removeClass('active');\n\n      $targetPanel\n        .attr('aria-hidden', false)\n        .addClass('active')\n        .siblings('[role=\"tabpanel\"]')\n        .attr('aria-hidden', true)\n        .removeClass('active');\n    } else if (e.type === 'keydown' && e.which === 13) { // 키가 눌렸을때 && 키가 엔터일떄\n      // e.which 는 keycode 값을 판별하는데 13 이 엔터키에 해당되는 keycode\n      $(this).click(); // 현재 엘리멘트에 클릭이벤트 발생시킴\n    }\n  }\n\n  // 바인딩에 keydown 이벤트 추가 - 쉼표 없음\n  $('[role=\"tab\"]').on('click keydown', eventHandler);\n}(jQuery));\n"]}